{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst input = document.querySelector(\"#datetime-picker\");\nconst startBtn = document.querySelector(\".start-btn\");\nconst timerDays = document.querySelector(\"[data-days]\");\nconst timerHours = document.querySelector(\"[data-hours]\");\nconst timerMinutes = document.querySelector(\"[data-minutes]\");\nconst timerSeconds = document.querySelector(\"[data-seconds]\");\n\nlet userSelectedDate = null;\nlet countInterval = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      alert(\"Please choose a date in the future\");\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(input, options);\n\nfunction updateTimer() {\n  const now = new Date();\n  const delta = userSelectedDate - now;\n\n  if (delta <= 0) {\n    clearInterval(countInterval);\n    return;\n  }\n\n  const days = Math.floor(delta / (1000 * 60 * 60 * 24));\n  const hours = Math.floor((delta % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n  const minutes = Math.floor((delta % (1000 * 60 * 60)) / (1000 * 60));\n  const seconds = Math.floor((delta % (1000 * 60)) / 1000);\n\n  timerDays.textContent = String(days).padStart(2, \"0\");\n  timerHours.textContent = String(hours).padStart(2, \"0\");\n  timerMinutes.textContent = String(minutes).padStart(2, \"0\");\n  timerSeconds.textContent = String(seconds).padStart(2, \"0\");\n}\n\nstartBtn.addEventListener(\"click\", () => {\n  startBtn.disabled = true;\n  countInterval = setInterval(updateTimer, 1000);\n  updateTimer();\n});\n\n"],"names":["input","startBtn","timerDays","timerHours","timerMinutes","timerSeconds","userSelectedDate","countInterval","options","selectedDates","flatpickr","updateTimer","delta","days","hours","minutes","seconds"],"mappings":"wIAGA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,YAAY,EAC9CC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,cAAc,EAClDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAe,SAAS,cAAc,gBAAgB,EAE5D,IAAIC,EAAmB,KACnBC,EAAgB,KAEpBN,EAAS,SAAW,GAEpB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBH,EAAmBG,EAAc,CAAC,EAC9BH,GAAoB,IAAI,MAC1B,MAAM,oCAAoC,EAC1CL,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEAS,EAAUV,EAAOQ,CAAO,EAExB,SAASG,GAAc,CAErB,MAAMC,EAAQN,EADF,IAAI,KAGhB,GAAIM,GAAS,EAAG,CACd,cAAcL,CAAa,EAC3B,MACJ,CAEE,MAAMM,EAAO,KAAK,MAAMD,GAAS,IAAO,GAAK,GAAK,GAAG,EAC/CE,EAAQ,KAAK,MAAOF,GAAS,IAAO,GAAK,GAAK,KAAQ,IAAO,GAAK,GAAG,EACrEG,EAAU,KAAK,MAAOH,GAAS,IAAO,GAAK,KAAQ,IAAO,GAAG,EAC7DI,EAAU,KAAK,MAAOJ,GAAS,IAAO,IAAO,GAAI,EAEvDV,EAAU,YAAc,OAAOW,CAAI,EAAE,SAAS,EAAG,GAAG,EACpDV,EAAW,YAAc,OAAOW,CAAK,EAAE,SAAS,EAAG,GAAG,EACtDV,EAAa,YAAc,OAAOW,CAAO,EAAE,SAAS,EAAG,GAAG,EAC1DV,EAAa,YAAc,OAAOW,CAAO,EAAE,SAAS,EAAG,GAAG,CAC5D,CAEAf,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBM,EAAgB,YAAYI,EAAa,GAAI,EAC7CA,EAAa,CACf,CAAC"}